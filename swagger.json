{
  "swagger": "2.0",
  "info": {
    "title": "Sample API",
    "version": "1.0.0",
    "description": "Sample Services"
  },
  "produces": [
    "application/json",
    "application/x-yaml",
    "application/edn",
    "application/transit+json",
    "application/transit+msgpack"
  ],
  "consumes": [
    "application/json",
    "application/x-yaml",
    "application/edn",
    "application/transit+json",
    "application/transit+msgpack"
  ],
  "basePath": "/",
  "paths": {
    "/api/projects": {
      "post": {
        "tags": ["Project API"],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the project\n- `active` whether or not this project is currently active",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Project"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "Project",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "summary": "Create and save a project"
      }
    },
    "/api/projects/{id}": {
      "get": {
        "tags": ["Project API"],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the project\n- `active` whether or not this project is currently active",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Retrieve a project",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": ["Project API"],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the project\n- `active` whether or not this project is currently active",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "Project",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Project"
            },
            "description": ""
          }
        },
        "summary": "Updates a project"
      },
      "delete": {
        "tags": ["Project API"],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the project\n- `active` whether or not this project is currently active",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "summary": "Deletes a project",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/projects/{project_id}/issues/{id}": {
      "delete": {
        "tags": ["Issues API"],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the issue\n- `project_client_id` is the foreign key reference to the projects client_id\n- `project_id` is the foreign key reference to the projects id\n- `priority` is the priority of the issue",
        "summary": "Deletes an issue",
        "responses": {
          "default": {
            "description": ""
          }
        }
      },
      "put": {
        "tags": ["Issues API"],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Issue",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the issue\n- `project_client_id` is the foreign key reference to the projects client_id\n- `project_id` is the foreign key reference to the projects id\n- `priority` is the priority of the issue",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "description": ""
          }
        },
        "summary": "Updates an issue"
      }
    },
    "/api/projects/{project_id}/issues": {
      "post": {
        "tags": ["Issues API"],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "Issue",
            "description": "",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the issue\n- `project_client_id` is the foreign key reference to the projects client_id\n- `project_id` is the foreign key reference to the projects id\n- `priority` is the priority of the issue",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "description": ""
          }
        },
        "summary": "Create and save an issue"
      },
      "get": {
        "tags": ["Issues API"],
        "parameters": [
          {
            "in": "path",
            "name": "project_id",
            "description": "",
            "required": true,
            "type": "string"
          }
        ],
        "description": "- `id` is an identifier generated by the DB\n- `created_at` and `updated_at` are fields which are generated by the back-end\n- `client_id` is an identifier that a client should generate (could be used for online/offline sync)\n- `title` is the title of the issue\n- `project_client_id` is the foreign key reference to the projects client_id\n- `project_id` is the foreign key reference to the projects id\n- `priority` is the priority of the issue",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Issue"
              }
            },
            "description": ""
          }
        },
        "summary": "Retrieve all issues"
      }
    },
    "/api/tests/plus": {
      "get": {
        "tags": ["Practice HTTP based services"],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "y",
            "description": "",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "query",
            "name": "x",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "summary": "x+y with query-parameters. y defaults to 1."
      }
    },
    "/api/tests/minus": {
      "post": {
        "tags": ["Practice HTTP based services"],
        "responses": {
          "200": {
            "schema": {
              "type": "integer",
              "format": "int64"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "in": "formData",
            "name": "y",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "formData",
            "name": "x",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "consumes": ["application/x-www-form-urlencoded"],
        "summary": "x-y with body-parameters."
      }
    },
    "/api/tests/echo": {
      "put": {
        "tags": ["Practice HTTP based services"],
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Response101"
              }
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "Body96",
            "description": "",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Body96"
              }
            }
          }
        ],
        "summary": "echoes a vector of anonymous hotties"
      },
      "post": {
        "tags": ["Practice HTTP based services"],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Issue"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "Issue",
            "description": "",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Issue"
            }
          }
        ],
        "summary": "echoes a Issue from json-body"
      }
    }
  },
  "definitions": {
    "Body96": {
      "type": "object",
      "properties": {
        "hot": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": ["hot"]
    },
    "Issue": {
      "type": "object",
      "properties": {
        "done": {
          "type": "boolean"
        },
        "due_date": {
          "type": "string",
          "format": "date-time"
        },
        "title": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "project_client_id": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "enum": ["3", "1", "2"]
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "client_id": {
          "type": "string"
        },
        "project_id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false,
      "required": [
        "done",
        "due_date",
        "title",
        "project_client_id",
        "priority",
        "client_id"
      ]
    },
    "Project": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "client_id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": ["client_id", "title", "active"]
    },
    "Response101": {
      "type": "object",
      "properties": {
        "hot": {
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "required": ["hot"]
    }
  }
}
